{
  "collection": {
    "info": {
      "_postman_id": "5f758c01-00c0-41e7-acb7-d2e6a9b36116",
      "name": "Test Report Demo",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "57895e41-4ee8-4bbc-8c2e-ae850a5262b2",
        "name": "Discover API Configuration",
        "request": {
          "url": {
            "protocol": "https",
            "path": [
              "identifiers",
              "did:web:api.did.actor:api"
            ],
            "host": [
              "api",
              "did",
              "actor"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Accept",
              "value": "application/json"
            }
          ],
          "method": "GET"
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "a5716bee-e618-4365-b1f5-ef8506e716e1",
              "type": "text/javascript",
              "exec": [
                "const jsonResponse = pm.response.json();",
                "",
                "pm.test(\"The DID Document MUST contain 'alsoKnownAs'\", function () {",
                "    pm.expect(jsonResponse.didDocument.alsoKnownAs).to.be.an(\"array\");",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'assertionMethod' DID URL\", function () {",
                "    pm.expect(jsonResponse.didDocument.assertionMethod).to.be.an(\"array\");",
                "    pm.expect(jsonResponse.didDocument.assertionMethod[0]).to.be.a(\"string\");",
                "    pm.environment.set(\"issuer_did_url\", jsonResponse.didDocument.assertionMethod[0]);",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'authentication' DID URL\", function () {",
                "    pm.expect(jsonResponse.didDocument.authentication).to.be.an(\"array\");",
                "    pm.expect(jsonResponse.didDocument.authentication[0]).to.be.a(\"string\");",
                "    pm.environment.set(\"holder_did_url\", jsonResponse.didDocument.authentication[0]);",
                "});",
                "",
                "pm.test(\"The DID Document MUST contain 'service'\", function () {",
                "    pm.expect(jsonResponse.didDocument.service).to.be.an(\"array\");",
                "    pm.environment.set(\"traceability_api_root\", jsonResponse.didDocument.service[0].serviceEndpoint);",
                "});"
              ],
              "_lastExecutionId": "e4f012f2-b98e-40b7-8a09-ce2909b26230"
            }
          }
        ]
      },
      {
        "id": "c6037cf8-7d57-42ea-984b-3bc66ec9c986",
        "name": "Issue Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "issue"
            ],
            "host": [
              "{{traceability_api_root}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"credential\": {\n    \"@context\": [\n      \"https://www.w3.org/2018/credentials/v1\"\n    ],\n    \"id\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\",\n    \"type\": [\n      \"VerifiableCredential\"\n    ],\n    \"issuer\": \"did:key:z6MktiSzqF9kqwdU8VkdBKx56EYzXfpgnNPUAGznpicNiWfn\",\n    \"issuanceDate\": \"{{$isoTimestamp}}\",\n    \"credentialSubject\": \"did:key:z6MktiSzqF9kqwdU8VkdBKx56EYzXfpgnNPUAGznpicNiWfn\"\n  },\n  \"options\": {\n    \"type\": \"Ed25519Signature2018\"\n  }\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e6113f26-3601-48ae-a379-80e87e402ea6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cff58ab0-a1b1-4370-a2b5-7daa12444231"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6f18c28-5c4d-4d26-b3df-7237131ebb1a",
              "type": "text/javascript",
              "exec": [
                "const verifiableCredential = pm.response.json()",
                "",
                "pm.test(\"The Verifiable Credential MUST have a 'proof'\", function () {",
                "    pm.expect(verifiableCredential.proof).to.be.an(\"object\");",
                "    pm.environment.set(\"verifiable_credential\", JSON.stringify(verifiableCredential));",
                "});",
                ""
              ],
              "_lastExecutionId": "a8529226-8e90-4283-b623-c879c2a6137d"
            }
          }
        ]
      },
      {
        "id": "ed8176a6-9be1-405a-a3df-3e98ca6b7782",
        "name": "Verify Credential",
        "request": {
          "url": {
            "path": [
              "credentials",
              "verify"
            ],
            "host": [
              "{{traceability_api_root}}"
            ],
            "query": [],
            "variable": []
          },
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n    \"verifiableCredential\": {{verifiable_credential}}\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          }
        },
        "response": [],
        "event": [
          {
            "listen": "test",
            "script": {
              "id": "62a67f13-8718-4dec-9b14-dfe4dc43ae97",
              "type": "text/javascript",
              "exec": [
                "const verification = pm.response.json()",
                "",
                "pm.test(\"The Verifiable Credential MUST have been verified\", function () {",
                "    pm.expect(verification.verified).to.eql(true);",
                "});",
                ""
              ],
              "_lastExecutionId": "d39e933a-44cf-4f10-a949-f8133ff43cea"
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 4,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 6,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 3,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 2352.3333333333335,
      "responseMin": 416,
      "responseMax": 5395,
      "responseSd": 2178.0098459118335,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1666658220720,
      "completed": 1666658227887
    },
    "executions": [
      {
        "id": "57895e41-4ee8-4bbc-8c2e-ae850a5262b2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 3,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c612e1e6-c3f9-4181-882e-97fc9a07705e",
          "httpRequestId": "c6b954a2-0998-40ca-bc6b-f05d19eda2e4"
        },
        "item": {
          "id": "57895e41-4ee8-4bbc-8c2e-ae850a5262b2",
          "name": "Discover API Configuration"
        },
        "response": {
          "id": "84088674-61c9-463c-b48d-cf81155030e2",
          "status": "OK",
          "code": 200,
          "responseTime": 5395,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "The DID Document MUST contain 'alsoKnownAs'",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'assertionMethod' DID URL",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'authentication' DID URL",
            "skipped": false
          },
          {
            "assertion": "The DID Document MUST contain 'service'",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6037cf8-7d57-42ea-984b-3bc66ec9c986",
        "cursor": {
          "ref": "edc963ec-dc03-4ba6-8549-f15cfebbcc45",
          "length": 3,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "8f32e7d4-70c9-4946-8d01-1406fa9ce4f8"
        },
        "item": {
          "id": "c6037cf8-7d57-42ea-984b-3bc66ec9c986",
          "name": "Issue Credential"
        },
        "response": {
          "id": "8b1fc2ef-b063-42ac-bf52-1e6d1b82e6b5",
          "status": "Created",
          "code": 201,
          "responseTime": 1246,
          "responseSize": 717
        },
        "assertions": [
          {
            "assertion": "The Verifiable Credential MUST have a 'proof'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed8176a6-9be1-405a-a3df-3e98ca6b7782",
        "cursor": {
          "ref": "5d04eb5e-eea0-4612-b9ce-b75dee3c3164",
          "length": 3,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "ab099004-835b-4cf4-bf08-ff3539ebbd29"
        },
        "item": {
          "id": "ed8176a6-9be1-405a-a3df-3e98ca6b7782",
          "name": "Verify Credential"
        },
        "response": {
          "id": "c93a9cc8-6fcf-4c32-94ef-17e8517273fb",
          "status": "OK",
          "code": 200,
          "responseTime": 416,
          "responseSize": 17
        },
        "assertions": [
          {
            "assertion": "The Verifiable Credential MUST have been verified",
            "skipped": false
          }
        ]
      }
    ]
  }
}