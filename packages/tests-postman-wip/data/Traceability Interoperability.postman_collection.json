{
	"info": {
		"_postman_id": "2774935d-404a-4a2e-866d-ccb7d86f0cc1",
		"name": "Traceability Interoperability",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "DID Configuration",
			"item": [
				{
					"name": "Validate DID Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"must return `200 Success` status\", function() {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"must include valid JSON response body\", function() {",
									"    // This will `throw` on parse failure",
									"    pm.response.json();",
									"})",
									"",
									"pm.test(\"response body must be valid did-configuration\", function() {",
									"    // TODO",
									"})",
									"",
									"pm.test(\"did:web issuer must be defined\", function() {",
									"    var jsonData = pm.response.json();",
									"    var issuers = jsonData.linked_dids.map(did => did.issuer.split(':')[1])",
									"    pm.expect(issuers).to.include('web');",
									"})",
									"",
									"pm.test(\"did:key issuer must be defined\", function() {",
									"    var jsonData = pm.response.json();",
									"    var issuers = jsonData.linked_dids.map(did => did.issuer.split(':')[1])",
									"    pm.expect(issuers).to.include('key');",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followRedirects": false,
						"strictSSL": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{PROVIDER_BASE_URL}}/.well-known/did-configuration.json",
							"host": [
								"{{PROVIDER_BASE_URL}}"
							],
							"path": [
								".well-known",
								"did-configuration.json"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Access Token",
			"item": [
				{
					"name": "Get Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"must return `200 Success` status\", function() {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"response body must include non-empty access_token\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.access_token).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"response body must represent `Bearer` token\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token_type).to.equal(\"Bearer\");",
									"});",
									"",
									"pm.test(\"returned token must expire in the future\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.expires_in).to.be.above(0);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"audience\": \"{{TOKEN_AUDIENCE}}\",\n    \"client_id\": \"{{CLIENT_ID}}\",\n    \"client_secret\": \"{{CLIENT_SECRET}}\",\n    \"grant_type\": \"client_credentials\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{TOKEN_ENDPOINT}}",
							"host": [
								"{{TOKEN_ENDPOINT}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}