name: Presentations Exchange

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "mesur.io-Transmute"
            issuer: MESUR_PRODUCTION
            verifier: TRANSMUTE_STAGING
          - name: "mesur.io-Mavennet"
            issuer: MESUR_PRODUCTION
            verifier: MAVENNET_STAGING
          - name: "Transmute-Mavennet"
            issuer: TRANSMUTE_STAGING
            verifier: MAVENNET_STAGING
          - name: Transmute-"mesur.io"
            issuer: TRANSMUTE_STAGING
            verifier: MESUR_PRODUCTION
          - name: "Mavennet-mesur.io"
            issuer: MAVENNET_STAGING
            verifier: MESUR_PRODUCTION
          - name: "Mavennet-Transmute"
            issuer: MAVENNET_STAGING
            verifier: TRANSMUTE_STAGING
    steps:
      - name: Check out git repository
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Run Tests
        env:
          issuer_organization_did_web: ${{secrets[format('{0}_ORGANIZATION_DID_WEB', matrix.issuer)]}}
          issuer_client_id: ${{secrets[format('{0}_CLIENT_ID', matrix.issuer)]}}
          issuer_client_secret: ${{secrets[format('{0}_CLIENT_SECRET', matrix.issuer)]}}
          issuer_token_audience: ${{secrets[format('{0}_TOKEN_AUDIENCE', matrix.issuer)]}}
          issuer_token_endpoint: ${{secrets[format('{0}_TOKEN_ENDPOINT', matrix.issuer)]}}
          issuer_api_base_url: ${{secrets[format('{0}_API_BASE_URL', matrix.issuer)]}}
          verifier_organization_did_web: ${{secrets[format('{0}_ORGANIZATION_DID_WEB', matrix.verifier)]}}
          verifier_client_id: ${{secrets[format('{0}_CLIENT_ID', matrix.verifier)]}}
          verifier_client_secret: ${{secrets[format('{0}_CLIENT_SECRET', matrix.verifier)]}}
          verifier_token_audience: ${{secrets[format('{0}_TOKEN_AUDIENCE', matrix.verifier)]}}
          verifier_token_endpoint: ${{secrets[format('{0}_TOKEN_ENDPOINT', matrix.verifier)]}}
          verifier_api_base_url: ${{secrets[format('{0}_API_BASE_URL', matrix.verifier)]}}
        run: |
          npx newman run ./docs/tutorials/presentations-exchange/presentations-exchange.postman_collection.json \
          --env-var ISSUER_ORGANIZATION_DID_WEB=$issuer_organization_did_web \
          --env-var ISSUER_CLIENT_ID=$issuer_client_id \
          --env-var ISSUER_CLIENT_SECRET=$issuer_client_secret \
          --env-var ISSUER_TOKEN_AUDIENCE=$issuer_token_audience \
          --env-var ISSUER_TOKEN_ENDPOINT=$issuer_token_endpoint \
          --env-var ISSUER_API_BASE_URL=$issuer_api_base_url \
          --env-var VERIFIER_ORGANIZATION_DID_WEB=$verifier_organization_did_web \
          --env-var VERIFIER_CLIENT_ID=$verifier_client_id \
          --env-var VERIFIER_CLIENT_SECRET=$verifier_client_secret \
          --env-var VERIFIER_TOKEN_AUDIENCE=$verifier_token_audience \
          --env-var VERIFIER_TOKEN_ENDPOINT=$verifier_token_endpoint \
          --env-var VERIFIER_API_BASE_URL=$verifier_api_base_url \
          --reporters cli,json
