openapi: 3.0.0
info:
  version: "0.0.0"
  title: Traceability Exchange API
  license:
    name: W3C Software and Document License
    url: http://www.w3.org/Consortium/Legal/copyright-software.
  contact:
    name: GitHub Source Code
    url: https://github.com/w3c-ccg/traceability-interop
tags:
  - name: Presentation Exchange
    description: APIs for Verifiable Presentation Exchange
paths:
  /presentations/available:
    post:
      tags:
        - Presentations
      summary: Begin a Verifiable Presentation
      operationId: notifyPresentationAvailable
      description:
        This API is the first part of a holder to holder credential exchange over http.
        The server MAY reply with a query for the client to proceed with a presentation.
      requestBody:
        description: Details the client provides to the server to help it decide if the presentation should be made.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotifyPresentationAvailableRequest"

      responses:
        "200":
          description: Proceed with presentation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotifyPresentationAvailableResponse"
        "400":
          description: Request for presentation is malformed
        "501":
          description: Not implemented
        "500":
          description: internal error
  /presentations/submissions:
    post:
      tags:
        - Presentations
      summary: Complete a Verifiable Presentation
      operationId: storePresentation
      description: Present from a client holder to a server holder, for the purpose of verification AND storage.
      requestBody:
        description: Details the client provides to the server to help it decide if the presentation should be made.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StorePresentationRequest"
      responses:
        "202":
          description: Presentation accepted
        "400":
          description: Presentation is malformed
        "401":
          description: Presentation did not contain a proof
        "402":
          description: Payment required
        "403":
          description: Presentation verification failed
        "425":
          description: Server is unwilling to risk processing a request that might be replayed
        "501":
          description: Not implemented
        "500":
          description: internal error

components:
  schemas:
    VerifiablePresentation:
      type: object
      description: A JSON-LD Verifiable Presentation with a proof.
      allOf:
        - $ref: "#/components/schemas/Presentation"
        - type: object
          properties:
            proof:
              $ref: "#/components/schemas/LinkedDataProof"
      example:
        {
          "@context":
            [
              "https://www.w3.org/2018/credentials/v1",
              "https://www.w3.org/2018/credentials/examples/v1",
            ],
          "holder": "did:example:123",
          "type": "VerifiablePresentation",
          "verifiableCredential":
            [
              "@context":
                [
                  "https://www.w3.org/2018/credentials/v1",
                  "https://www.w3.org/2018/credentials/examples/v1",
                ],
              "id": "http://example.gov/credentials/3732",
              "type": ["VerifiableCredential", "UniversityDegreeCredential"],
              "issuer": "did:example:123",
              "issuanceDate": "2020-03-16T22:37:26.544Z",
              "credentialSubject":
                {
                  "id": "did:example:123",
                  "degree":
                    {
                      "type": "BachelorDegree",
                      "name": "Bachelor of Science and Arts",
                    },
                },
              "proof":
                {
                  "type": "Ed25519Signature2018",
                  "created": "2020-04-02T18:28:08Z",
                  "verificationMethod": "did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN",
                  "proofPurpose": "assertionMethod",
                  "jws": "eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA",
                },
            ],
          "proof":
            {
              "type": "Ed25519Signature2018",
              "created": "2020-04-02T18:28:08Z",
              "verificationMethod": "did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN",
              "proofPurpose": "assertionMethod",
              "jws": "eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA",
            },
        }

    NotifyPresentationAvailableRequest:
      type: object
      properties:
        query:
          type: object
          description: See https://w3c-ccg.github.io/vp-request-spec/#format
          properties:
            type:
              type: string
              description: "The type of query the server should reply with."
            credentialQuery:
              type: object
              description: "Details of the client's available presentation"

      example:
        {
          "query":
            [
              {
                "type": "RequestQueryByFrame",
                "credentialQuery":
                  [
                    {
                      "type":
                        [
                          "VerifiableCredential",
                          "CommercialInvoiceCertificate",
                        ],
                      "reason": "Wallet XYZ is ready to selectively disclose new credentials.",
                    },
                  ],
              },
            ],
        }

    NotifyPresentationAvailableResponse:
      type: object
      properties:
        query:
          type: object
          description: See https://w3c-ccg.github.io/vp-request-spec/#format
        domain:
          type: string
          description: See https://w3id.org/security#domain
        challenge:
          type: string
          description: See https://w3id.org/security#challenge
      example:
        {
          "query":
            [
              {
                "type": "QueryByFrame",
                "credentialQuery":
                  {
                    "frame":
                      {
                        "@context":
                          [
                            "https://www.w3.org/2018/credentials/v1",
                            "https://w3id.org/traceability/v1",
                            "https://w3id.org/bbs/v1",
                          ],
                        "type":
                          [
                            "VerifiableCredential",
                            "CommercialInvoiceCertificate",
                          ],
                        "credentialSubject":
                          {
                            "@explicit": true,
                            "type": ["CommercialInvoice"],
                            "purchaseDate": {},
                            "destinationCountry": {},
                          },
                      },
                  },
              },
            ],
          "domain": "jobs.example.com",
          "challenge": "3182bdea-63d9-11ea-b6de-3b7c1404d57f",
        }
    StorePresentationRequest:
      $ref: "#/components/schemas/VerifiablePresentation"
