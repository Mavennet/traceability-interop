{
	"info": {
		"_postman_id": "5f410a4d-28cc-4df7-9d84-fc604b7b440d",
		"name": "Reference Credentials",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Service Provider VC API",
			"item": [
				{
					"name": "Issuance",
					"item": [
						{
							"name": "Issue",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"console.log(pm.request.body)",
											"",
											"pm.test(",
											"    \"reference\" + \"::\" + ",
											"    pm.variables.get(\"credentialType\") + \"::\" + ",
											"    \"issue\" + \"::\" + \"credential\" + \"::\" + ",
											"    pm.collectionVariables.get(\"name\")+ \"::\" + ",
											"    pm.collectionVariables.get(\"name\"), ",
											"    function () {",
											"        postman.setNextRequest(null);",
											"        pm.collectionVariables.set(\"responseIssueCredPrimary\", responseBody);",
											"        pm.response.to.have.status(201);",
											"        postman.setNextRequest();",
											"    }",
											");"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var cred = pm.iterationData.get('credential');",
											"var did = pm.variables.get(\"did\");",
											"console.log('Setting primary issuer did to:', did);",
											"cred.issuer = did;",
											"console.log('Retrieved issuer did:', cred.issuer);",
											"",
											"pm.variables.set(",
											"    'credentialprimary',",
											"    JSON.stringify(cred)",
											");",
											"pm.variables.set(",
											"    'credentialType',",
											"    pm.iterationData.get('name')",
											");",
											"console.log('Set initial request to:', pm.variables.get('credentialprimary'));"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"credential\": {{credentialprimary}}\n}"
								},
								"url": {
									"raw": "https://{{server}}/{{prefix}}/credentials/issue",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"{{prefix}}",
										"credentials",
										"issue"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Signing",
					"item": [
						{
							"name": "Sign",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(",
											"    \"reference\" + \"::\" + ",
											"    pm.variables.get(\"credentialType\") + \"::\" + ",
											"    \"sign\" + \"::\" + \"presentation\" + \"::\" + ",
											"    pm.collectionVariables.get(\"name\")+ \"::\" + ",
											"    pm.collectionVariables.get(\"name\"), ",
											"    function () {",
											"        pm.collectionVariables.set(\"responseSignPresPrimary\", responseBody);",
											"        pm.response.to.have.status(201);",
											"    }",
											");"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"presentation\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"holder\": \"{{did}}\",\n        \"type\": \"VerifiablePresentation\",\n        \"verifiableCredential\": [\n            {{responseIssueCredPrimary}}\n        ]\n    },\n    \"options\": {\n        \"verificationMethod\": \"\",\n        \"proofPurpose\": \"assertionMethod\",\n        \"created\": \"2020-04-02T18:28:08Z\",\n        \"domain\": \"{{server}}\",\n        \"challenge\": \"d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{server}}/{{prefix}}/presentations/prove",
									"protocol": "https",
									"host": [
										"{{server}}"
									],
									"path": [
										"{{prefix}}",
										"presentations",
										"prove"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Verification",
					"item": [
						{
							"name": "Credentials",
							"item": [
								{
									"name": "Verify Credential",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(",
													"    \"reference\" + \"::\" + ",
													"    pm.variables.get(\"credentialType\") + \"::\" + ",
													"    \"verify\" + \"::\" + \"credential\" + \"::\" + ",
													"    pm.collectionVariables.get(\"name\")+ \"::\" + ",
													"    pm.collectionVariables.get(\"name\"), ",
													"    function () {",
													"        pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"verifiableCredential\": {{responseIssueCredPrimary}},\n    \"options\": {\n        \"verificationMethod\": \"\",\n        \"proofPurpose\": \"assertionMethod\",\n        \"created\": \"2021-03-11T17:40:41.662Z\",\n        \"domain\": \"{{server}}\",\n        \"challenge\": \"d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8\",\n        \"checks\": [\n            \"credentialStatus\"\n        ]\n    }\n}"
										},
										"url": {
											"raw": "https://{{server}}/{{prefix}}/credentials/verify",
											"protocol": "https",
											"host": [
												"{{server}}"
											],
											"path": [
												"{{prefix}}",
												"credentials",
												"verify"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Presentations",
							"item": [
								{
									"name": "Verify Presentation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(",
													"    \"reference\" + \"::\" + ",
													"    pm.variables.get(\"credentialType\") + \"::\" + ",
													"    \"verify\" + \"::\" + \"presentation\" + \"::\" + ",
													"    pm.collectionVariables.get(\"name\")+ \"::\" + ",
													"    pm.collectionVariables.get(\"name\"), ",
													"    function () {",
													"        //pm.collectionVariables.set('credentialFromPres', JSON.stringify(JSON.parse(pm.requestBody).verifiablePresentation.verifiableCredential[0]));",
													"        pm.response.to.have.status(200);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"verifiablePresentation\": {{responseSignPresPrimary}},\n    \"options\": {\n        \"verificationMethod\": \"\",\n        \"proofPurpose\": \"assertionMethod\",\n        \"created\": \"2020-04-02T18:48:36Z\",\n        \"domain\": \"{{server}}\",\n        \"challenge\": \"d436f0c8-fbd9-4e48-bbb2-55fc5d0920a8\"\n    }\n}"
										},
										"url": {
											"raw": "https://{{server}}/{{prefix}}/presentations/verify",
											"protocol": "https",
											"host": [
												"{{server}}"
											],
											"path": [
												"{{prefix}}",
												"presentations",
												"verify"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(",
					"    \"reference\" + \"::\" + ",
					"    pm.variables.get(\"server\") + \"::\" + ",
					"    \"response\" + \"::\" + \"timing\" + \"::\" + ",
					"    pm.request.url+ \"::\" + ",
					"    pm.response.responseTime, ",
					"    function(){",
					"        pm.expect(pm.response.responseTime).to.be.below(Number.parseInt(pm.variables.get(\"responseTime\")));",
					"});",
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "responseTime",
			"value": "5000"
		},
		{
			"key": "name",
			"value": "mesur.io"
		},
		{
			"key": "server",
			"value": "vc.mesur.io"
		},
		{
			"key": "prefix",
			"value": "next"
		},
		{
			"key": "did",
			"value": "did:key:z6Mki93tJ2rwrDaWTMZcdMShk4xLWf75Fu559dAapKe8pdmX"
		},
		{
			"key": "responseIssueCredPrimary",
			"value": ""
		},
		{
			"key": "responseSignPresPrimary",
			"value": ""
		}
	]
}